/*
 * generated by Xtext
 */
package edu.cmu.cs464.p3.modlang.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import edu.cmu.cs464.p3.modlang.services.ModLangGrammarAccess;

public class ModLangParser extends AbstractContentAssistParser {
	
	@Inject
	private ModLangGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected edu.cmu.cs464.p3.modlang.ui.contentassist.antlr.internal.InternalModLangParser createParser() {
		edu.cmu.cs464.p3.modlang.ui.contentassist.antlr.internal.InternalModLangParser result = new edu.cmu.cs464.p3.modlang.ui.contentassist.antlr.internal.InternalModLangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPrefixAccess().getAlternatives(), "rule__Prefix__Alternatives");
					put(grammarAccess.getModuleAccess().getAlternatives(), "rule__Module__Alternatives");
					put(grammarAccess.getModuleListAccess().getAlternatives(), "rule__ModuleList__Alternatives");
					put(grammarAccess.getPrefixAccess().getGroup_0(), "rule__Prefix__Group_0__0");
					put(grammarAccess.getPrefixAccess().getGroup_1(), "rule__Prefix__Group_1__0");
					put(grammarAccess.getSpecAccess().getGroup(), "rule__Spec__Group__0");
					put(grammarAccess.getSpecAccess().getGroup_1(), "rule__Spec__Group_1__0");
					put(grammarAccess.getModuleAccess().getGroup_1(), "rule__Module__Group_1__0");
					put(grammarAccess.getModuleAccess().getGroup_1_2(), "rule__Module__Group_1_2__0");
					put(grammarAccess.getModuleAccess().getGroup_2(), "rule__Module__Group_2__0");
					put(grammarAccess.getModuleAccess().getGroup_3(), "rule__Module__Group_3__0");
					put(grammarAccess.getModuleListAccess().getGroup_0(), "rule__ModuleList__Group_0__0");
					put(grammarAccess.getModuleListAccess().getGroup_2(), "rule__ModuleList__Group_2__0");
					put(grammarAccess.getModelAccess().getModulesAssignment(), "rule__Model__ModulesAssignment");
					put(grammarAccess.getPrefixAccess().getSpecAssignment_0_2(), "rule__Prefix__SpecAssignment_0_2");
					put(grammarAccess.getSpecAccess().getPathAssignment_1_0(), "rule__Spec__PathAssignment_1_0");
					put(grammarAccess.getModuleAccess().getPfAssignment_0(), "rule__Module__PfAssignment_0");
					put(grammarAccess.getModuleAccess().getPfAssignment_1_0(), "rule__Module__PfAssignment_1_0");
					put(grammarAccess.getModuleAccess().getMlAssignment_1_2_1(), "rule__Module__MlAssignment_1_2_1");
					put(grammarAccess.getModuleAccess().getSpecAssignment_1_2_3(), "rule__Module__SpecAssignment_1_2_3");
					put(grammarAccess.getModuleAccess().getPfAssignment_2_0(), "rule__Module__PfAssignment_2_0");
					put(grammarAccess.getModuleAccess().getModAssignment_2_2(), "rule__Module__ModAssignment_2_2");
					put(grammarAccess.getModuleAccess().getIdAssignment_3_0(), "rule__Module__IdAssignment_3_0");
					put(grammarAccess.getModuleAccess().getModAssignment_3_2(), "rule__Module__ModAssignment_3_2");
					put(grammarAccess.getModuleListAccess().getOpenAssignment_0_2(), "rule__ModuleList__OpenAssignment_0_2");
					put(grammarAccess.getModuleListAccess().getSingleAssignment_1(), "rule__ModuleList__SingleAssignment_1");
					put(grammarAccess.getModuleListAccess().getContextAssignment_2_1(), "rule__ModuleList__ContextAssignment_2_1");
					put(grammarAccess.getModuleListAccess().getDefAssignment_2_3(), "rule__ModuleList__DefAssignment_2_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			edu.cmu.cs464.p3.modlang.ui.contentassist.antlr.internal.InternalModLangParser typedParser = (edu.cmu.cs464.p3.modlang.ui.contentassist.antlr.internal.InternalModLangParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ModLangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ModLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
